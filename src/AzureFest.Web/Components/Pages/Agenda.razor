@page "/agenda/{Date:datetime?}"
@using AzureFest.Web.Services
@inject EventDetailsProvider EventDetailsProvider
@inject WebsiteSettings Settings

<PageTitle>Agenda | Azure Fest</PageTitle>

<HeaderSpacer />

<Section HeaderText="Agenda">

    @if (Settings.SessionsAnnounced)
    {
        @if (_schedule is not null)
        {
            @if (Settings.ScheduleAnnounced)
            {
                foreach (var slot in _schedule)
                {
                    <div class="row text-center">
                        <h2>@slot.Key.ToString("HH:mm") - @slot.First().EndsAt!.Value.ToString("HH:mm")</h2>
                    </div>

                    <div class="row justify-content-center g-3">

                        @if (slot.Any())
                        {
                            foreach (var session in slot)
                            {
                                <SessionCard Session="@session"/>
                            }
                        }

                    </div>
                }
            }
            else
            {
                <div class="row text-center">
                    <p>We are diligently finalizing the event agenda.</p>
                    <p>Please check back soon for the complete timetable. Meanwhile, explore the exciting sessions scheduled for Azure Fest.</p>
                </div>

                <div class="row justify-content-center g-3">

                    @foreach (var session in _schedule
                                  .SelectMany(slot => slot)
                                  .Where(session => !session.IsServiceSession ?? false)
                                  .OrderBy(session => session.Title))
                    {
                        <div class="col-6 col-md-4 d-flex justify-content-center">
                            <SessionCard Session="@session"/>
                        </div>
                    }

                </div>
            }
        }
    }
    else
    {
        <div class="row text-center">
            <p>We are currently working diligently to finalize the agenda for the event.</p>
            <p>Please check back soon for the full agenda, which will be published as soon as it is confirmed.</p>
        </div>
    }

</Section>

@code
{
    [Parameter]
    public DateTime? Date { get; set; }

    private IEnumerable<IGrouping<DateTime, Session>>? _schedule;

    protected override async Task OnInitializedAsync()
    {
        if (!Settings.SessionsAnnounced) return;

        _schedule = await EventDetailsProvider.GetScheduleAsync(Settings.CurrentEdition);
    }
}
