@page "/qrscan"
@layout EmptyLayout
@using Microsoft.AspNetCore.WebUtilities
@using System.Text.Json
@using AzureFest.Web.Services
@inject IConfiguration Configuration
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center" style="min-height: 80vh;">
    <div class="card shadow-lg" style="max-width: 450px; width: 100%;">
        <div class="card-body text-center">
            @if (!_authorized)
            {
                <h3 class="card-title text-danger">Access Denied</h3>
                <p class="card-text">This page is not available.</p>
            }
            else
            {
                <h3 class="card-title mb-3">Scan Attendee QR Code</h3>
                <noscript>
                    <p>JavaScript is required to use the camera scanner.</p>
                </noscript>
                <div class="row mb-3 justify-content-center">
                    <div class="col-12">
                        <div id="reader" style="width:350px; max-width: 100%; margin: 0 auto;"></div>
                    </div>
                </div>
                <div class="row justify-content-center">
                    <div class="col-12">
                        <span class="text-muted">Point the camera at the attendee's QR code.</span>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script src="https://unpkg.com/html5-qrcode" type="text/javascript"></script>
<script>
    (function () {
        const secret = @(new MarkupString(JsonSerializer.Serialize(_secret ?? "")));
        if (!secret) { return; }
        function onScanSuccess(decodedText, decodedResult) {
            const url = `/qrscanresult?secret=${encodeURIComponent(secret)}&payload=${encodeURIComponent(decodedText)}`;
            window.location.href = url;
        }
        function onScanFailure(error) {}
        let html5QrcodeScanner = new Html5QrcodeScanner(
            "reader",
            { fps: 10, qrbox: {width: 250, height: 250} },
            false);
        html5QrcodeScanner.render(onScanSuccess, onScanFailure);
    })();
</script>

@code {
    
    private string? _secret;
    private bool _authorized;

    protected override void OnInitialized()
    {
        var uri = new Uri(Navigation.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);
        _secret = query.TryGetValue("secret", out var s) ? s.ToString() : null;

        var requiredSecret = Configuration["QrScanSecret"];
        _authorized = !string.IsNullOrEmpty(_secret) && _secret == requiredSecret;
    }
}